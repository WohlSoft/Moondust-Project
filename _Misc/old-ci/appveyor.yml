#----------------------------------------------------------------------------
#
# Platform Game Engine Project by Wohlstand, a free platform for making games of platform genre
# Copyright (c) 2014-2024 Vitaly Novichkov <admin@wohlnet.ru>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#--------------------------------------------------------------------------------
# AppVeyor CI building configuration file for Microsoft Windows Operating system
#                             created 2015-11-25
#--------------------------------------------------------------------------------

version: 0.4.1.0.{build}

# you can use {branch} name in version format too
# version: 1.0.{build}-{branch}

branches:
  only:  # whitelist
    - master
    - stable

skip_tags: true

skip_commits:
    message: /Created.*\.(png|jpg|jpeg|bmp|gif)/       # Regex for matching commit message

# Operating system (build VM template)
os: unstable

# clone directory
clone_folder: C:\_Repos\PGE-Project
clone_depth:  2  # clone entire repository history if not defined
# Uncommend those two lines to enable RDP (which can be used to debug stuff and test built stuff)
# init:
# - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

environment:
  global:
    PLATFORMTOOLSET: "v140"
    GIT_BINARY_DIR: "C:\\Program Files\\Git\\cmd"
    CMAKE_BINARY_DIR: "C:\\Program Files (x86)\\CMake\\bin"
    BASH_EXE: "C:\\Program Files\\Git\\bin\\bash.exe"
    WGET_BIN: "C:\\msys64\\usr\\bin\\wget.exe"
    SEVENZIP: "C:\\Program Files\\7-Zip\\7z.exe"
    URL_NINJA: "http://wohlsoft.ru/docs/Software/Ninja-Build/ninja-win.zip"
    NINJA_ZIP: "C:\\temp-d\\ninja-win.zip"
    GitDir: ${GIT_BINARY_DIR}
    CMakeDir: ${CMAKE_BINARY_DIR}

  matrix:
    # 64 bit build with modern Windows support
#    - APPVEYOR_BUILD_WORKER_IMAGE: "Visual Studio 2015"
    - APPVEYOR_BUILD_WORKER_IMAGE: "Visual Studio 2019"
      PLATFORM: x64
      BIN_DIR: bin-w64
      WINXX_ARCH: win64
      DOWNLOAD_MINGW: YES
      URL_MINGWw64: http://wohlsoft.ru/docs/Software/MinGW/x86_64-8.1.0-release-posix-seh-rt_v6-rev0.7z
      MINGWw64_7z: C:\temp-d\x86_64-8.1.0-release-posix-seh-rt_v6-rev0.7z
      DOWNLOAD_QT: YES
      URL_QT: http://wohlsoft.ru/docs/Software/QtBuilds/Qt-5.14.2-x64-mingw-w64-8.1.0-shared-release.7z
      QT_7z: C:\temp-d\Qt-5.14.2-x64-mingw-w64-8.1.0-shared-release.7z
      COMPILER: C:\MinGW-w64\mingw64\bin
      QT_DIR: C:\Qt\5.14.2-x64\bin
      QtDir: ${QT_DIR}
      MinGW: ${COMPILER}
      MINGWx64Dest: yes
    # 32 bit build with legacy Windows XP support (Qt since 5.8 no more supports Windows XP)
    - APPVEYOR_BUILD_WORKER_IMAGE: "Visual Studio 2015"
      PLATFORM: Win32
      BIN_DIR: bin-w32
      WINXX_ARCH: win32
      DOWNLOAD_MINGW: YES
      URL_MINGWw64: http://wohlsoft.ru/docs/Software/MinGW/i686-8.1.0-release-posix-dwarf-rt_v6-rev0.7z
      MINGWw64_7z: C:\temp-d\i686-8.1.0-release-posix-dwarf-rt_v6-rev0.7z
      DOWNLOAD_QT: YES
      URL_QT: http://wohlsoft.ru/docs/Software/QtBuilds/Qt-5.6.3-i686-mingw-w64-8.1.0-shared-release.7z
      QT_7z: C:\temp-d\Qt-5.6.3-i686-mingw-w64-8.1.0-shared-release.7z
      COMPILER: C:\MinGW-w64\mingw32\bin
      QT_DIR: C:\Qt\5.6.3-i686\bin
      QtDir: ${QT_DIR}
      MinGW: ${COMPILER}
      MINGWx64Dest: no

install:
- cmd: tzutil /s "Russian Standard Time_dstoff"
- cmd: _common/appveyor-ci/download.cmd
- cmd: _common/appveyor-ci/install.cmd
#  - ps: new-item C:\temp-d -itemtype directory
#  - ps: (new-object net.webclient).DownloadFile('http://wohlsoft.ru/docs/Software/Ninja-Build/ninja-win.zip', 'C:\temp-d\ninja-win.zip');
#  - ps: if ($env:PLATFORM -eq "x64") { (new-object net.webclient).DownloadFile('http://wohlsoft.ru/docs/Software/QtBuilds/MinGW-w64-x86_64-7.1.0-posix-seh-rt_v5-rev0.7z', 'C:\temp-d\MinGW-w64-x86_64-7.1.0-posix-seh-rt_v5-rev0.7z'); }
#  - ps: if ($env:PLATFORM -eq "x64") { (new-object net.webclient).DownloadFile('http://wohlsoft.ru/docs/Software/QtBuilds/Qt-5.9.0-x64-shared-mingw-w64-posix-seh-7-1-0.7z', 'C:\temp-d\Qt-5.9.0-x64-shared-mingw-w64-posix-seh-7-1-0.7z'); }
#  - ps: |
#      if ($env:PLATFORM -eq "x64") {
#      Set-Alias sevenzip "C:\Program Files\7-Zip\7z.exe"
#      sevenzip x C:\temp-d\MinGW-w64-x86_64-7.1.0-posix-seh-rt_v5-rev0.7z -oC:\MinGW-w64;
#      sevenzip x C:\temp-d\Qt-5.9.0-x64-shared-mingw-w64-posix-seh-7-1-0.7z -oC:\Qt; }
#  - ps: if ($env:PLATFORM -eq "x64") { (new-object net.webclient).DownloadFile('http://wohlsoft.ru/docs/Software/MinGW/x86_64-8.1.0-release-posix-seh-rt_v6-rev0.7z', 'C:\temp-d\x86_64-8.1.0-release-posix-seh-rt_v6-rev0.7z'); }
#  - ps: if ($env:PLATFORM -eq "Win32") { (new-object net.webclient).DownloadFile('http://wohlsoft.ru/docs/Software/MinGW/i686-8.1.0-release-posix-dwarf-rt_v6-rev0.7z', 'C:\temp-d\i686-8.1.0-release-posix-dwarf-rt_v6-rev0.7z'); }
#  - ps: if ($env:PLATFORM -eq "x64") { (new-object net.webclient).DownloadFile('http://wohlsoft.ru/docs/Software/QtBuilds/Qt-5.9.6-x64-mingw-w64-8.1.0-shared-release.7z', 'C:\temp-d\Qt-5.9.6-x64-mingw-w64-8.1.0-shared-release.7z'); }
#  - ps: if ($env:PLATFORM -eq "Win32") { (new-object net.webclient).DownloadFile('http://wohlsoft.ru/docs/Software/QtBuilds/Qt-5.6.3-i686-mingw-w64-8.1.0-shared-release.7z', 'C:\temp-d\Qt-5.6.3-i686-mingw-w64-8.1.0-shared-release.7z'); }
#  - ps: |
#      if ($env:PLATFORM -eq "x64") {
#      Set-Alias sevenzip "C:\Program Files\7-Zip\7z.exe"
#      sevenzip x C:\temp-d\x86_64-8.1.0-release-posix-seh-rt_v6-rev0.7z -oC:\MinGW-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0;
#      sevenzip x C:\temp-d\Qt-5.9.6-x64-mingw-w64-8.1.0-shared-release.7z -oC:\Qt; }
#  - ps: |
#      if ($env:PLATFORM -eq "Win32") {
#      Set-Alias sevenzip "C:\Program Files\7-Zip\7z.exe"
#      sevenzip x C:\temp-d\i686-8.1.0-release-posix-dwarf-rt_v6-rev0.7z -oC:\MinGW-w64\i686-8.1.0-posix-dwarf-rt_v6-rev0;
#      sevenzip x C:\temp-d\Qt-5.6.3-i686-mingw-w64-8.1.0-shared-release.7z -oC:\Qt; }


build_script:
  - cmd: _common/appveyor-ci/build.cmd
  - cmd: _common/appveyor-ci/deploy.cmd

artifacts:
  - path: '$(BIN_DIR)\_packed\pge-project-$(APPVEYOR_REPO_BRANCH)-$(WINXX_ARCH).zip'
  - path: '$(BIN_DIR)\_packed\install-pge-common-$(APPVEYOR_REPO_BRANCH)-$(WINXX_ARCH).zip'
  - path: '$(BIN_DIR)\_packed\install-pge-editor-$(APPVEYOR_REPO_BRANCH)-$(WINXX_ARCH).zip'
  - path: '$(BIN_DIR)\_packed\install-pge-engine-$(APPVEYOR_REPO_BRANCH)-$(WINXX_ARCH).zip'
  - path: '$(BIN_DIR)\_packed\install-pge-tools-$(APPVEYOR_REPO_BRANCH)-$(WINXX_ARCH).zip'
  - path: '$(BIN_DIR)\_packed\pge-maintainer-$(APPVEYOR_REPO_BRANCH)-$(WINXX_ARCH).zip'     #Standalone package of PGE Maintainer (work outside PGE)
  - path: '$(BIN_DIR)\_packed\pge-musplay-$(APPVEYOR_REPO_BRANCH)-$(WINXX_ARCH).zip'        #Standalone package of PGE MusPlay (work outside PGE)
  - path: '$(BIN_DIR)\_packed\pge-calibrator-$(APPVEYOR_REPO_BRANCH)-$(WINXX_ARCH).zip'     #Standalone package of Playable Character calibration tool (work outside PGE)
  - path: '$(BIN_DIR)\_packed\GIFs2PNG-$(APPVEYOR_REPO_BRANCH)-$(WINXX_ARCH).zip'
  - path: '$(BIN_DIR)\_packed\PNG2GIFs-$(APPVEYOR_REPO_BRANCH)-$(WINXX_ARCH).zip'
  - path: '$(BIN_DIR)\_packed\PaletteFilter-$(APPVEYOR_REPO_BRANCH)-$(WINXX_ARCH).zip'
  - path: '$(BIN_DIR)\_packed\LazyFixTool-$(APPVEYOR_REPO_BRANCH)-$(WINXX_ARCH).zip'
  - path: 'build_date_$(APPVEYOR_REPO_BRANCH)_$(WINXX_ARCH).txt'

deploy:
  - provider: Environment
    name: WohlnetFTP
